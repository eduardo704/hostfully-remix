generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int             @id @default(autoincrement())
  email               String          @unique
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  accommodationsOwned Accommodation[]
  bookings            Booking[]
  notes               Note[]
  password            Password?
}

model Password {
  hash   String
  userId Int    @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Note {
  id        String   @id @default(cuid())
  title     String
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Accommodation {
  id        Int      @id @default(autoincrement())
  level     String
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  owner  User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  images   AccImage?
  bookings Booking[]
  location Location?
  reviews  Review?
}

model Location {
  accommodationId Int           @unique
  country         String
  name            String
  lat             Float
  long            Float
  accommodation   Accommodation @relation(fields: [accommodationId], references: [id])
}

model AccImage {
  accommodationId Int           @unique
  src             String
  accommodation   Accommodation @relation(fields: [accommodationId], references: [id])
}

model Review {
  accommodationId Int           @unique
  raiting         Float
  count           Int
  accommodation   Accommodation @relation(fields: [accommodationId], references: [id])
}

model Booking {
  id        Int      @id @default(autoincrement())
  accommodationId Int           
  userId          Int           
  from            DateTime
  until           DateTime
  accommodation   Accommodation @relation(fields: [accommodationId], references: [id])
  user            User          @relation(fields: [userId], references: [id])
}
